curl --location 'https://apim-eu1-border-service-desa.azure-api.net/ot-configServer/config/srv-ms-sm-ne-ods-consultaProveedor/development?files=application.yml' \

--header 'x-api-key: df584e6f4dcc46e183a100d16da13c54' \

--header 'ocp-apim-subscription-key: df584e6f4dcc46e183a100d16da13c54' \

--data ''
 

-- =====================================================
-- SCRIPT PARA RECREAR TODAS LAS TABLAS CON ULID
-- Y TIP_ROL CON IDTIPOROL VARCHAR(50)
-- =====================================================

-- =====================================================
-- PASO 1: ELIMINAR TODAS LAS TABLAS EXISTENTES
-- (En orden correcto respetando Foreign Keys)
-- =====================================================

-- Eliminar tablas de relación primero
DROP TABLE IF EXISTS [persona].[Mae_SucursalCompaniaSeguro];
DROP TABLE IF EXISTS [persona].[Tbt_PersonaCompaniaSeguro];
DROP TABLE IF EXISTS [persona].[Tbt_PersonaRol];
DROP TABLE IF EXISTS [persona].[Mae_Sucursal];
DROP TABLE IF EXISTS [persona].[Mae_Proveedor];

-- Eliminar tablas de catálogo
DROP TABLE IF EXISTS [persona].[Mae_CompaniaSeguros];
DROP TABLE IF EXISTS [persona].[Mae_PersonaJuridica];
DROP TABLE IF EXISTS [persona].[Tip_TipoProveedor];
DROP TABLE IF EXISTS [persona].[Tip_Rol];

-- Eliminar tabla base
DROP TABLE IF EXISTS [persona].[Mae_Persona];

-- =====================================================
-- PASO 2: RECREAR TABLAS CON ULID (VARCHAR(26))
-- =====================================================

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- TABLA BASE: Mae_Persona
CREATE TABLE [persona].[Mae_Persona]
(
    IdPersona                    VARCHAR(26)         NOT NULL    CONSTRAINT PK_Mae_Persona PRIMARY KEY,
    TipoPersona                  CHAR(1)             NOT NULL,   -- J: Jurídica, N: Natural
    NombreCompletoPersona        NVARCHAR(200)       NOT NULL,
    NombreAbreviadoPersona       NVARCHAR(100)       NOT NULL,
    CodigoTipoDocumento          VARCHAR(20)         NOT NULL,
    NumeroDocumento              VARCHAR(20)         NOT NULL,
    DescripcionPaginaWeb         NVARCHAR(100)       NULL,
    CodigoTipoTrabajador         CHAR(1)             NULL,
    EstadoRegistro               CHAR(3)             NOT NULL,   -- V: Vigente, A: Anulado
    FechaCreacion                DATETIME            NOT NULL,
    CodigoUsuarioCreador         VARCHAR(15)         NOT NULL,
    FechaModificacion            DATETIME            NULL,
    CodigoUsuarioModificador     VARCHAR(15)         NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema  VARCHAR(15)         NOT NULL,
    FechaCreacionSistema         DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema   VARCHAR(15)         NULL,
    FechaUpdateSistema           DATETIME            NULL
);
GO

-- TABLA: Mae_PersonaJuridica
CREATE TABLE [persona].[Mae_PersonaJuridica]
(
    IdPersona                      VARCHAR(26)         NOT NULL    CONSTRAINT PK_Mae_PersonaJuridica PRIMARY KEY
        CONSTRAINT FK_Mae_PersonaJuridica_Mae_Persona REFERENCES [persona].[Mae_Persona],
    FechaAniversario               DATE                NULL,
    NombreRazonSocial              VARCHAR(70)         NOT NULL,
    NombreRazonSocialAbreviada     VARCHAR(50)         NULL,
    CodigoGrupoEconomico           VARCHAR(6)          NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Mae_CompaniaSeguros
CREATE TABLE [persona].[Mae_CompaniaSeguros]
(
    IdCompaniaSeguros              VARCHAR(26)         NOT NULL    CONSTRAINT PK_Mae_CompaniaSeguros PRIMARY KEY,
    IdPersonaJuridica              VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Mae_CompaniaSeguros_Mae_PersonaJuridica REFERENCES [persona].[Mae_PersonaJuridica],
    CodigoIAFA                     VARCHAR(5)          NOT NULL,
    DescripcionCompaniaSeguros     VARCHAR(40)         NOT NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Tip_Rol (CON IDTIPOROL VARCHAR(50))
CREATE TABLE [persona].[Tip_Rol]
(
    IdTipoRol                      VARCHAR(50)         NOT NULL    CONSTRAINT PK_Tip_Rol PRIMARY KEY,
    CodigoLval                     VARCHAR(15)         NULL,
    DescripcionRol                 VARCHAR(50)         NOT NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Tip_TipoProveedor
CREATE TABLE [persona].[Tip_TipoProveedor]
(
    IdTipoProveedor                VARCHAR(26)         NOT NULL    CONSTRAINT PK_Tip_TipoProveedor PRIMARY KEY,
    TipoProveedor                  NUMERIC(2,0)        NOT NULL,
    DescripcionTipoProveedor       VARCHAR(150)        NOT NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Mae_Proveedor
CREATE TABLE [persona].[Mae_Proveedor]
(
    IdProveedor                    VARCHAR(26)         NOT NULL    CONSTRAINT PK_Mae_Proveedor PRIMARY KEY,
    IdPersona                      VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Mae_Proveedor_Mae_Persona REFERENCES [persona].[Mae_Persona],
    IdTipoProveedor                VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Mae_Proveedor_Tip_TipoProveedor REFERENCES [persona].[Tip_TipoProveedor],
    CodigoProveedor                VARCHAR(10)         NOT NULL,
    TipoProveedor                  NUMERIC(2,0)        NOT NULL,
    IndicadorCertificacion         VARCHAR(1)          NULL,
    IndicadorRedSelecta            VARCHAR(1)          NOT NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Mae_Sucursal
CREATE TABLE [persona].[Mae_Sucursal]
(
    IdSucursal                     VARCHAR(26)         NOT NULL    CONSTRAINT PK_Mae_Sucursal PRIMARY KEY,
    IdProveedor                    VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Mae_Sucursal_Mae_Proveedor REFERENCES [persona].[Mae_Proveedor],
    CodigoProveedor                VARCHAR(10)         NOT NULL,
    NumeroSucursalProveedor        VARCHAR(4)          NOT NULL,
    DescripcionSucursal            VARCHAR(150)        NOT NULL,
    IndicadorPrincipalSucursal     VARCHAR(1)          NOT NULL,
    CategoriaSucursal              CHAR(1)             NULL,
    CodigoSucursalSeps             VARCHAR(10)         NULL,
    RegistroSeps                   VARCHAR(10)         NULL,
    IndicadorEPS                   VARCHAR(1)          NULL,
    CodigoSeps                     VARCHAR(20)         NULL,
    CodigoClinicaEps               VARCHAR(20)         NULL,
    IndicadorRedSelecta            CHAR(1)             NULL,
    IndicadorExoneracionIgv        VARCHAR(1)          NULL,
    IndicadorDetraccion            VARCHAR(1)          NULL,
    TipoInstitucion                VARCHAR(20)         NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Tbt_PersonaRol
CREATE TABLE [persona].[Tbt_PersonaRol]
(
    IdPersonaRol                   VARCHAR(26)         NOT NULL    CONSTRAINT PK_Tbt_PersonaRol PRIMARY KEY,
    IdPersona                      VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Tbt_PersonaRol_Mae_Persona REFERENCES [persona].[Mae_Persona],
    IdTipoRol                      VARCHAR(50)         NOT NULL    
        CONSTRAINT FK_Tbt_PersonaRol_Tip_Rol REFERENCES [persona].[Tip_Rol],
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Tbt_PersonaCompaniaSeguro
CREATE TABLE [persona].[Tbt_PersonaCompaniaSeguro]
(
    IdPersonaCompaniaSeguro        VARCHAR(26)         NOT NULL    CONSTRAINT PK_Tbt_PersonaCompaniaSeguro PRIMARY KEY,
    IdPersona                      VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Tbt_PersonaCompaniaSeguro_Mae_Persona REFERENCES [persona].[Mae_Persona],
    IdCompaniaSeguro               VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Tbt_PersonaCompaniaSeguro_Mae_CompaniaSeguros REFERENCES [persona].[Mae_CompaniaSeguros],
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- TABLA: Mae_SucursalCompaniaSeguro
CREATE TABLE [persona].[Mae_SucursalCompaniaSeguro]
(
    IdSucursalCompaniaSeguro       VARCHAR(26)         NOT NULL    CONSTRAINT PK_Mae_SucursalCompaniaSeguro PRIMARY KEY,
    IdSucursal                     VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Mae_SucursalCompaniaSeguro_Mae_Sucursal REFERENCES [persona].[Mae_Sucursal],
    IdCompaniaSeguro               VARCHAR(26)         NOT NULL    
        CONSTRAINT FK_Mae_SucursalCompaniaSeguro_Mae_CompaniaSeguros REFERENCES [persona].[Mae_CompaniaSeguros],
    CodigoProveedor                VARCHAR(10)         NOT NULL,
    NumeroSucursalProveedor        VARCHAR(10)         NOT NULL,
    EstadoRegistro                 CHAR(1)             NOT NULL,   -- V: Vigente, A: Anulado
    CodigoUsuarioCreador           VARCHAR(15)         NOT NULL,
    FechaCreacion                  DATETIME            NOT NULL,
    CodigoUsuarioModificador       VARCHAR(15)         NULL,
    FechaModificacion              DATETIME            NULL,
    -- Campos de auditoría adicionales
    CodigoUsuarioCreadorSistema    VARCHAR(15)         NOT NULL,
    FechaCreacionSistema           DATETIME            NOT NULL,
    CodigoUsuarioUpdateSistema     VARCHAR(15)         NULL,
    FechaUpdateSistema             DATETIME            NULL
);
GO

-- =====================================================
-- PASO 3: CREAR ÍNDICES PARA OPTIMIZAR BÚSQUEDAS
-- =====================================================
CREATE NONCLUSTERED INDEX IX_Mae_Persona_01 ON [persona].[Mae_Persona](NumeroDocumento, CodigoTipoDocumento);
CREATE NONCLUSTERED INDEX IX_Mae_Proveedor_01 ON [persona].[Mae_Proveedor](CodigoProveedor);
CREATE NONCLUSTERED INDEX IX_Mae_Sucursal_01 ON [persona].[Mae_Sucursal](CodigoProveedor, NumeroSucursalProveedor);
CREATE NONCLUSTERED INDEX IX_Mae_PersonaJuridica_01 ON [persona].[Mae_PersonaJuridica](NombreRazonSocial);

-- =====================================================
-- PASO 4: VERIFICACIÓN FINAL
-- =====================================================
-- Verificar estructura de todas las tablas
SELECT 
    TABLE_SCHEMA,
    TABLE_NAME,
    COLUMN_NAME,
    DATA_TYPE,
    CHARACTER_MAXIMUM_LENGTH,
    IS_NULLABLE
FROM INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME IN (
    'Mae_Persona', 'Mae_PersonaJuridica', 'Mae_CompaniaSeguros',
    'Tip_Rol', 'Tip_TipoProveedor', 'Mae_Proveedor', 'Mae_Sucursal',
    'Tbt_PersonaRol', 'Tbt_PersonaCompaniaSeguro', 'Mae_SucursalCompaniaSeguro'
)
AND TABLE_SCHEMA = 'persona'
ORDER BY TABLE_NAME, ORDINAL_POSITION;

-- Verificar todas las Foreign Keys recreadas
SELECT 
    fk.name AS FK_Name,
    SCHEMA_NAME(tp.schema_id) + '.' + tp.name AS Parent_Table,
    cp.name AS Parent_Column,
    SCHEMA_NAME(tr.schema_id) + '.' + tr.name AS Referenced_Table,
    cr.name AS Referenced_Column
FROM sys.foreign_keys fk
INNER JOIN sys.tables tp ON fk.parent_object_id = tp.object_id
INNER JOIN sys.tables tr ON fk.referenced_object_id = tr.object_id
INNER JOIN sys.foreign_key_columns fkc ON fkc.constraint_object_id = fk.object_id
INNER JOIN sys.columns cp ON fkc.parent_column_id = cp.column_id AND fkc.parent_object_id = cp.object_id
INNER JOIN sys.columns cr ON fkc.referenced_column_id = cr.column_id AND fkc.referenced_object_id = cr.object_id
ORDER BY fk.name;

-- =====================================================
-- RESUMEN DE CAMBIOS REALIZADOS:
-- =====================================================
/*
✅ CAMBIOS PRINCIPALES:
   1. UNIQUEIDENTIFIER → VARCHAR(26) para IDs principales (ULID)
   2. Tip_Rol.IdTipoRol: VARCHAR(8) → VARCHAR(50)
   3. Todas las relaciones FK actualizadas correctamente
   4. Mantenida toda la estructura y lógica original
   5. Índices recreados para performance

📋 TABLAS AFECTADAS:
   • Mae_Persona (IdPersona: UNIQUEIDENTIFIER → VARCHAR(26))
   • Mae_PersonaJuridica (IdPersona: UNIQUEIDENTIFIER → VARCHAR(26))
   • Mae_CompaniaSeguros (Id's: UNIQUEIDENTIFIER → VARCHAR(26))
   • Tip_Rol (IdTipoRol: VARCHAR(8) → VARCHAR(50))
   • Tip_TipoProveedor (IdTipoProveedor: UNIQUEIDENTIFIER → VARCHAR(26))
   • Mae_Proveedor (Id's: UNIQUEIDENTIFIER → VARCHAR(26))
   • Mae_Sucursal (Id's: UNIQUEIDENTIFIER → VARCHAR(26))
   • Tbt_PersonaRol (Id's: UNIQUEIDENTIFIER/VARCHAR(8) → VARCHAR(26)/VARCHAR(50))
   • Tbt_PersonaCompaniaSeguro (Id's: UNIQUEIDENTIFIER → VARCHAR(26))
   • Mae_SucursalCompaniaSeguro (Id's: UNIQUEIDENTIFIER → VARCHAR(26))

🎯 BENEFICIOS DEL ULID:
   - Ordenamiento cronológico natural
   - Mejor performance en índices
   - Formato URL-safe
   - Compatible con sistemas distribuidos
   - Más legible que GUID

⚠️  IMPORTANTE:
   - Todos los datos existentes se perderán
   - Las aplicaciones necesitarán generar ULIDs válidos
   - Verificar que los sistemas puedan manejar VARCHAR(26) para IDs
*/



-- =====================================================
-- SCRIPT DE INSERCIÓN DE DATOS PARA ESQUEMA PERSONA
-- CON ULID Y DATOS BASADOS EN EL CORE EXISTENTE
-- =====================================================

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =====================================================
-- PASO 1: INSERTAR TIPOS DE ROLES
-- =====================================================

INSERT INTO [persona].[Tip_Rol] (
    IdTipoRol, CodigoLval, DescripcionRol, EstadoRegistro,
    CodigoUsuarioCreador, FechaCreacion, CodigoUsuarioModificador, FechaModificacion,
    CodigoUsuarioCreadorSistema, FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('PROVEEDOR_SALUD', 'PROV001', 'Proveedor de Servicios de Salud', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('FUNERARIA', 'FUN001', 'Servicios Funerarios', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('FARMACIA', 'FAR001', 'Farmacia y Boticas', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('CLINICA', 'CLI001', 'Clínica y Centros Médicos', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('LABORATORIO', 'LAB001', 'Laboratorios Clínicos', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('ODONTOLOGIA', 'ODO001', 'Servicios Odontológicos', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 2: INSERTAR TIPOS DE PROVEEDORES
-- =====================================================

INSERT INTO [persona].[Tip_TipoProveedor] (
    IdTipoProveedor, TipoProveedor, DescripcionTipoProveedor, EstadoRegistro,
    CodigoUsuarioCreador, FechaCreacion, CodigoUsuarioModificador, FechaModificacion,
    CodigoUsuarioCreadorSistema, FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('01JAY5K3P2QRST6WX8Z9BCD4FG', 19, 'Persona Natural', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4FH', 19, 'Persona Jurídica', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4FJ', 12, 'Clínica Especializada', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4FK', 26, 'Centro Médico', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 3: INSERTAR PERSONAS (ENTIDADES JURÍDICAS)
-- =====================================================

-- Personas base
INSERT INTO [persona].[Mae_Persona] (
    IdPersona, TipoPersona, NombreCompletoPersona, NombreAbreviadoPersona, 
    CodigoTipoDocumento, NumeroDocumento, DescripcionPaginaWeb, CodigoTipoTrabajador,
    EstadoRegistro, FechaCreacion, CodigoUsuarioCreador, FechaModificacion, CodigoUsuarioModificador,
    CodigoUsuarioCreadorSistema, FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    -- Funerarias
    ('01JAY5K3P2QRST6WX8Z9BCD4F1', 'J', 'FUNERARIA SAN ISIDRO S.A.C.', 'FUNERARIA SAN ISIDRO', 'RUC', '20500442612', 'www.funerariasanisidro.com', NULL, 'ACT', '2020-09-20 02:10:35', 'S61234', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F2', 'J', 'TRAVEX S.A.', 'TRAVEX S.A.', 'RUC', '20505238703', NULL, NULL, 'ACT', '2013-09-25 21:53:53', 'KHUAMAN', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F3', 'J', 'GORDILLO & ASOCIADOS, ABOGADOS S.C.R.L.', 'GORDILLO & ASOCIADOS', 'RUC', '20508220891', NULL, NULL, 'ACT', '2008-04-01 20:09:48', 'INTERFAZ', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    
    -- Clínicas y Centros Médicos
    ('01JAY5K3P2QRST6WX8Z9BCD4F4', 'J', 'CENTRO ONCOLOGICO ALIADA S.A.C.', 'CENTRO ONCOLOGICO ALIADA', 'RUC', '20507773889', NULL, NULL, 'ACT', '2018-11-13 09:08:47', 'E05643', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F5', 'J', 'CLÍNICA SANTA MÓNICA S.A.C.', 'CLINICA SANTA MONICA', 'RUC', '20504969372', 'www.clinicasantamonica.com', NULL, 'ANU', '2009-02-16 16:29:27', 'SPOTESTA', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F6', 'J', 'PATOLOGÍA Y DIAGNÓSTICO S.A.C.', 'PATOLOGIA', 'RUC', '20171239344', NULL, NULL, 'ACT', '2007-10-31 10:37:44', 'INTERFAZ', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    
    -- Farmacias
    ('01JAY5K3P2QRST6WX8Z9BCD4F7', 'J', 'PLUS FARMA S.A.C.', 'PLUS FARMA', 'RUC', '20485913379', NULL, NULL, 'ANU', '2008-04-01 20:09:28', 'INTERFAZ', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F8', 'J', 'FARMA PLUS S.A.C.', 'FARMA PLUS', 'RUC', '20486162911', NULL, NULL, 'ACT', '2008-04-01 20:09:28', 'INTERFAZ', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    
    -- Laboratorios
    ('01JAY5K3P2QRST6WX8Z9BCD4F9', 'J', 'LABORATORIOS SYNTH S.A.C.', 'LABORATORIOS SYNTH', 'RUC', '20191045732', NULL, NULL, 'ACT', '2007-10-31 10:37:47', 'INTERFAZ', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4G0', 'J', 'FYMEDIC S.A.C.', 'FYMEDIC', 'RUC', '20508235802', NULL, NULL, 'ACT', '2009-06-01 16:23:57', 'FMORENO', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 4: INSERTAR PERSONAS JURÍDICAS (DETALLES)
-- =====================================================

INSERT INTO [persona].[Mae_PersonaJuridica] (
    IdPersona, FechaAniversario, NombreRazonSocial, NombreRazonSocialAbreviada, 
    CodigoGrupoEconomico, EstadoRegistro, CodigoUsuarioCreador, FechaCreacion, 
    CodigoUsuarioModificador, FechaModificacion, CodigoUsuarioCreadorSistema, 
    FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('01JAY5K3P2QRST6WX8Z9BCD4F1', '2020-09-20', 'FUNERARIA SAN ISIDRO S.A.C.', 'FUNERARIA SAN ISIDRO', 'GE001', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F2', '2013-09-25', 'TRAVEX S.A.', 'TRAVEX S.A.', 'GE002', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F3', '2008-04-01', 'GORDILLO & ASOCIADOS, ABOGADOS S.C.R.L.', 'GORDILLO & ASOCIADOS', 'GE003', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F4', '2018-11-13', 'CENTRO ONCOLOGICO ALIADA S.A.C.', 'CENTRO ONCOLOGICO ALIADA', 'GE004', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F5', '2009-02-16', 'CLÍNICA SANTA MÓNICA S.A.C.', 'CLINICA SANTA MONICA', 'GE005', 'A', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F6', '2007-10-31', 'PATOLOGÍA Y DIAGNÓSTICO S.A.C.', 'PATOLOGIA', 'GE006', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F7', '2008-04-01', 'PLUS FARMA S.A.C.', 'PLUS FARMA', 'GE007', 'A', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F8', '2008-04-01', 'FARMA PLUS S.A.C.', 'FARMA PLUS', 'GE008', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4F9', '2007-10-31', 'LABORATORIOS SYNTH S.A.C.', 'LABORATORIOS SYNTH', 'GE009', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4G0', '2009-06-01', 'FYMEDIC S.A.C.', 'FYMEDIC', 'GE010', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 5: INSERTAR PROVEEDORES
-- =====================================================

INSERT INTO [persona].[Mae_Proveedor] (
    IdProveedor, IdPersona, IdTipoProveedor, CodigoProveedor, TipoProveedor,
    IndicadorCertificacion, IndicadorRedSelecta, EstadoRegistro, CodigoUsuarioCreador,
    FechaCreacion, CodigoUsuarioModificador, FechaModificacion, CodigoUsuarioCreadorSistema,
    FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    -- Proveedores basados en los datos de referencia
    ('01JAY5K3P2QRST6WX8Z9BCD4H1', '01JAY5K3P2QRST6WX8Z9BCD4F1', '01JAY5K3P2QRST6WX8Z9BCD4FH', '37', 19, 'N', 'N', 'V', 'NOVAPROD', '1999-05-17', 'INTERFAZ', '2008-04-01', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H2', '01JAY5K3P2QRST6WX8Z9BCD4F4', '01JAY5K3P2QRST6WX8Z9BCD4FJ', '44', 12, 'N', 'N', 'V', 'VALENCIA', '2004-05-28', 'SPOTESTA', '2010-02-15', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H3', '01JAY5K3P2QRST6WX8Z9BCD4F5', '01JAY5K3P2QRST6WX8Z9BCD4FK', '44', 26, 'N', 'N', 'A', 'NOVAPROD', '1998-01-06', 'PVALDIVIA', '2003-05-31', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H4', '01JAY5K3P2QRST6WX8Z9BCD4F6', '01JAY5K3P2QRST6WX8Z9BCD4FG', '47', 19, 'N', 'N', 'V', 'DHUSEY', '2003-01-12', 'S35540', '2001-02-29', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H5', '01JAY5K3P2QRST6WX8Z9BCD4F7', '01JAY5K3P2QRST6WX8Z9BCD4FG', '100', 19, 'N', 'N', 'V', 'NOVAPROD', '1992-08-24', 'SPOTESTA', '2010-07-09', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H6', '01JAY5K3P2QRST6WX8Z9BCD4F8', '01JAY5K3P2QRST6WX8Z9BCD4FG', '102', 19, 'N', 'N', 'V', 'NOVAPROD', '1999-05-17', 'SPOTESTA', '2010-03-22', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H7', '01JAY5K3P2QRST6WX8Z9BCD4F9', '01JAY5K3P2QRST6WX8Z9BCD4FG', '104', 19, 'N', 'N', 'V', 'DHUSEY', '2003-12-22', 'S62014', '2009-09-20', 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4H8', '01JAY5K3P2QRST6WX8Z9BCD4G0', '01JAY5K3P2QRST6WX8Z9BCD4FG', '106', 19, 'N', 'N', 'V', 'NOVAPROD', '2000-03-05', 'USRANSA', '2007-11-19', 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 6: INSERTAR SUCURSALES
-- =====================================================

INSERT INTO [persona].[Mae_Sucursal] (
    IdSucursal, IdProveedor, CodigoProveedor, NumeroSucursalProveedor, DescripcionSucursal,
    IndicadorPrincipalSucursal, CategoriaSucursal, CodigoSucursalSeps, RegistroSeps,
    IndicadorEPS, CodigoSeps, CodigoClinicaEps, IndicadorRedSelecta, IndicadorExoneracionIgv,
    IndicadorDetraccion, TipoInstitucion, EstadoRegistro, CodigoUsuarioCreador, FechaCreacion,
    CodigoUsuarioModificador, FechaModificacion, CodigoUsuarioCreadorSistema, FechaCreacionSistema,
    CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    -- Sucursales basadas en los datos de referencia
    ('01JAY5K3P2QRST6WX8Z9BCD4J1', '01JAY5K3P2QRST6WX8Z9BCD4H1', '37', '1', 'FUNERARIA SAN ISIDRO - SEDE PRINCIPAL', 'S', '1', '99-9999-9', '99-9999-9', NULL, '99-9999-9', '9999999', 'S', 'N', 'N', 'FUNERARIA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J2', '01JAY5K3P2QRST6WX8Z9BCD4H2', '44', '2', 'A.C.A.S.CRISTAL', 'S', '1', '03060C', '03060C', NULL, '03-060C-C', '990003C', 'S', 'N', 'N', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J3', '01JAY5K3P2QRST6WX8Z9BCD4H2', '44', '3', 'MEDICA PUCALLPA', 'S', '1', '03060C', '03060C', NULL, '03-060C-C', '990003C', 'S', 'N', 'N', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J4', '01JAY5K3P2QRST6WX8Z9BCD4H2', '44', '4', 'CENTRO SALUD PACIFICO CAJAMARCA', 'S', '1', '03060C', '03060C', '00005', '03-060C-C', '030609C', 'S', 'N', 'N', 'CENTRO_SALUD', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J5', '01JAY5K3P2QRST6WX8Z9BCD4H3', '100', '1', 'CENTRAL HOUSE E.I.R.L.', 'P', '1', '00010499', '00010499', NULL, '00010499', '00010499', 'S', 'N', 'N', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J6', '01JAY5K3P2QRST6WX8Z9BCD4H4', '102', '1', 'JENFAR S.A.', 'P', '1', '00009123', '00009123', NULL, '00009123', '00009123', 'S', 'N', 'N', 'FARMACIA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J7', '01JAY5K3P2QRST6WX8Z9BCD4H5', '104', '2', 'CENTRO MÉDICO BRITISH AMERICAN HOSPITAL', 'S', '1', '00010464', '00010464', '00002', '00010464', '00010464', 'S', 'N', 'N', 'HOSPITAL', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J8', '01JAY5K3P2QRST6WX8Z9BCD4H6', '104', '3', 'CSALUD S.A. - CLINICA MAISON DE SANTE DEL ESTE', 'S', '1', '00015118', '00015118', '00003', '00015118', '00015118', 'S', 'N', 'N', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4J9', '01JAY5K3P2QRST6WX8Z9BCD4H7', '105', '1', 'CLINICA DELGADO', 'P', '1', '00015610', '00015610', '00001', '00015610', '00015610', 'S', 'N', 'N', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4K0', '01JAY5K3P2QRST6WX8Z9BCD4H8', '106', '1', 'CLINICA INTERNACIONAL S.A.', 'P', '1', '00015610', '00015610', '00001', '00015610', '00015610', 'S', 'N', 'N', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 7: INSERTAR RELACIONES PERSONA-ROL
-- =====================================================

INSERT INTO [persona].[Tbt_PersonaRol] (
    IdPersonaRol, IdPersona, IdTipoRol, EstadoRegistro, CodigoUsuarioCreador,
    FechaCreacion, CodigoUsuarioModificador, FechaModificacion, CodigoUsuarioCreadorSistema,
    FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('01JAY5K3P2QRST6WX8Z9BCD4L1', '01JAY5K3P2QRST6WX8Z9BCD4F1', 'FUNERARIA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L2', '01JAY5K3P2QRST6WX8Z9BCD4F4', 'CLINICA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L3', '01JAY5K3P2QRST6WX8Z9BCD4F5', 'CLINICA', 'A', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L4', '01JAY5K3P2QRST6WX8Z9BCD4F6', 'PROVEEDOR_SALUD', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L5', '01JAY5K3P2QRST6WX8Z9BCD4F7', 'FARMACIA', 'A', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L6', '01JAY5K3P2QRST6WX8Z9BCD4F8', 'FARMACIA', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L7', '01JAY5K3P2QRST6WX8Z9BCD4F9', 'LABORATORIO', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4L8', '01JAY5K3P2QRST6WX8Z9BCD4G0', 'LABORATORIO', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 8: INSERTAR COMPAÑÍAS DE SEGUROS (EJEMPLOS)
-- =====================================================

-- Primero insertamos las personas para las compañías de seguros
INSERT INTO [persona].[Mae_Persona] (
    IdPersona, TipoPersona, NombreCompletoPersona, NombreAbreviadoPersona, 
    CodigoTipoDocumento, NumeroDocumento, DescripcionPaginaWeb, CodigoTipoTrabajador,
    EstadoRegistro, FechaCreacion, CodigoUsuarioCreador, FechaModificacion, CodigoUsuarioModificador,
    CodigoUsuarioCreadorSistema, FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('01JAY5K3P2QRST6WX8Z9BCD4M1', 'J', 'ESSALUD - SEGURO SOCIAL DE SALUD', 'ESSALUD', 'RUC', '20131257882', 'www.essalud.gob.pe', NULL, 'ACT', GETDATE(), 'ADMIN', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4M2', 'J', 'RIMAC SEGUROS Y REASEGUROS', 'RIMAC', 'RUC', '20100041953', 'www.rimac.com.pe', NULL, 'ACT', GETDATE(), 'ADMIN', NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- Personas jurídicas para las compañías de seguros
INSERT INTO [persona].[Mae_PersonaJuridica] (
    IdPersona, FechaAniversario, NombreRazonSocial, NombreRazonSocialAbreviada, 
    CodigoGrupoEconomico, EstadoRegistro, CodigoUsuarioCreador, FechaCreacion, 
    CodigoUsuarioModificador, FechaModificacion, CodigoUsuarioCreadorSistema, 
    FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('01JAY5K3P2QRST6WX8Z9BCD4M1', '1999-04-27', 'ESSALUD - SEGURO SOCIAL DE SALUD', 'ESSALUD', 'GE011', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4M2', '1896-01-01', 'RIMAC SEGUROS Y REASEGUROS', 'RIMAC', 'GE012', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- Compañías de seguros
INSERT INTO [persona].[Mae_CompaniaSeguros] (
    IdCompaniaSeguros, IdPersonaJuridica, CodigoIAFA, DescripcionCompaniaSeguros, EstadoRegistro,
    CodigoUsuarioCreador, FechaCreacion, CodigoUsuarioModificador, FechaModificacion,
    CodigoUsuarioCreadorSistema, FechaCreacionSistema, CodigoUsuarioUpdateSistema, FechaUpdateSistema
) VALUES 
    ('01JAY5K3P2QRST6WX8Z9BCD4N1', '01JAY5K3P2QRST6WX8Z9BCD4M1', 'ESS01', 'ESSALUD - Seguro Social de Salud', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL),
    ('01JAY5K3P2QRST6WX8Z9BCD4N2', '01JAY5K3P2QRST6WX8Z9BCD4M2', 'RIM01', 'RIMAC Seguros y Reaseguros', 'V', 'ADMIN', GETDATE(), NULL, NULL, 'SISTEMA', GETDATE(), NULL, NULL);

-- =====================================================
-- PASO 9: VERIFICACIÓN DE DATOS INSERTADOS
-- =====================================================

-- Verificar cantidad de registros insertados
SELECT 'Tip_Rol' as Tabla, COUNT(*) as Registros FROM [persona].[Tip_Rol]
UNION ALL
SELECT 'Tip_TipoProveedor', COUNT(*) FROM [persona].[Tip_TipoProveedor]
UNION ALL
SELECT 'Mae_Persona', COUNT(*) FROM [persona].[Mae_Persona]
UNION ALL
SELECT 'Mae_PersonaJuridica', COUNT(*) FROM [persona].[Mae_PersonaJuridica]
UNION ALL
SELECT 'Mae_Proveedor', COUNT(*) FROM [persona].[Mae_Proveedor]
UNION ALL
SELECT 'Mae_Sucursal', COUNT(*) FROM [persona].[Mae_Sucursal]
UNION ALL
SELECT 'Tbt_PersonaRol', COUNT(*) FROM [persona].[Tbt_PersonaRol]
UNION ALL
SELECT 'Mae_CompaniaSeguros', COUNT(*) FROM [persona].[Mae_CompaniaSeguros];

-- Verificar integridad de las relaciones
SELECT 
    p.NombreAbreviadoPersona,
    pj.NombreRazonSocial,
    pr.CodigoProveedor,
    tp.DescripcionTipoProveedor,
    r.DescripcionRol
FROM [persona].[Mae_Persona] p
LEFT JOIN [persona].[Mae_PersonaJuridica] pj ON p.IdPersona = pj.IdPersona
LEFT JOIN [persona].[Mae_Proveedor] pr ON p.IdPersona = pr.IdPersona
LEFT JOIN [persona].[Tip_TipoProveedor] tp ON pr.IdTipoProveedor = tp.IdTipoProveedor
LEFT JOIN [persona].[Tbt_PersonaRol] tpr ON p.IdPersona = tpr.IdPersona
LEFT JOIN [persona].[Tip_Rol] r ON tpr.IdTipoRol = r.IdTipoRol
ORDER BY p.NombreAbreviadoPersona;

-- Verificar sucursales por proveedor
SELECT 
    p.NombreAbreviadoPersona,
    pr.CodigoProveedor,
    s.NumeroSucursalProveedor,
    s.DescripcionSucursal,
    s.IndicadorPrincipalSucursal,
    s.TipoInstitucion
FROM [persona].[Mae_Persona] p
INNER JOIN [persona].[Mae_Proveedor] pr ON p.IdPersona = pr.IdPersona
INNER JOIN [persona].[Mae_Sucursal] s ON pr.IdProveedor = s.IdProveedor
ORDER BY p.NombreAbreviadoPersona, s.NumeroSucursalProveedor;

-- =====================================================
-- RESUMEN DE DATOS INSERTADOS:
-- =====================================================
/*
✅ DATOS INSERTADOS:
   • 6 Tipos de Roles (Funeraria, Clínica, Farmacia, etc.)
   • 4 Tipos de Proveedores
   • 12 Personas (10 proveedores + 2 compañías seguros)
   • 12 Personas Jurídicas (detalles ampliados)
   • 8 Proveedores (basados en datos reales del core)
   • 10 Sucursales (con códigos SEPS y configuración)
   • 8 Relaciones Persona-Rol
   • 2 Compañías de Seguros (ESSALUD y RIMAC)

📊 CARACTERÍSTICAS:
   • ULIDs generados manualmente para demostración
   • Datos basados en las imágenes del core existente
   • Relaciones correctas entre todas las tablas
   • Estados realistas (ACT/ANU, V/A)
   • Códigos y fechas del sistema original
   • Estructura preparada para escalamiento

🎯 PRÓXIMOS PASOS:
   • Implementar generación automática de ULIDs
   • Crear stored procedures para inserciones
   • Configurar triggers de auditoría
   • Migrar datos masivos del sistema anterior
*/


-- =====================================================
-- SCRIPT PARA ELIMINAR SOLO LOS FOREIGN KEY CONSTRAINTS
-- MANTENIENDO LOS PRIMARY KEY INTACTOS
-- =====================================================

-- IMPORTANTE: Ejecutar en una transacción para seguridad
BEGIN TRANSACTION;

PRINT '====================================================';
PRINT 'ELIMINANDO SOLO LOS FOREIGN KEY CONSTRAINTS';
PRINT 'Fecha/Hora: ' + CONVERT(VARCHAR, GETDATE(), 120);
PRINT '====================================================';

-- =====================================================
-- ELIMINAR TODOS LOS FOREIGN KEY CONSTRAINTS
-- =====================================================
PRINT 'Eliminando FOREIGN KEY constraints...';

-- Esquema CONVENIO
-- (Las tablas del esquema convenio no tienen FK explícitos definidos)

-- Esquema PERSONA
-- FK_Mae_PersonaJuridica_Mae_Persona
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_PersonaJuridica_Mae_Persona')
BEGIN
    ALTER TABLE [persona].[Mae_PersonaJuridica] DROP CONSTRAINT FK_Mae_PersonaJuridica_Mae_Persona;
    PRINT '  ✓ FK_Mae_PersonaJuridica_Mae_Persona eliminado';
END

-- FK_Mae_CompaniaSeguros_Mae_PersonaJuridica
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_CompaniaSeguros_Mae_PersonaJuridica')
BEGIN
    ALTER TABLE [persona].[Mae_CompaniaSeguros] DROP CONSTRAINT FK_Mae_CompaniaSeguros_Mae_PersonaJuridica;
    PRINT '  ✓ FK_Mae_CompaniaSeguros_Mae_PersonaJuridica eliminado';
END

-- FK_Mae_Proveedor_Mae_Persona
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_Proveedor_Mae_Persona')
BEGIN
    ALTER TABLE [persona].[Mae_Proveedor] DROP CONSTRAINT FK_Mae_Proveedor_Mae_Persona;
    PRINT '  ✓ FK_Mae_Proveedor_Mae_Persona eliminado';
END

-- FK_Mae_Proveedor_Tip_TipoProveedor
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_Proveedor_Tip_TipoProveedor')
BEGIN
    ALTER TABLE [persona].[Mae_Proveedor] DROP CONSTRAINT FK_Mae_Proveedor_Tip_TipoProveedor;
    PRINT '  ✓ FK_Mae_Proveedor_Tip_TipoProveedor eliminado';
END

-- FK_Mae_Sucursal_Mae_Proveedor
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_Sucursal_Mae_Proveedor')
BEGIN
    ALTER TABLE [persona].[Mae_Sucursal] DROP CONSTRAINT FK_Mae_Sucursal_Mae_Proveedor;
    PRINT '  ✓ FK_Mae_Sucursal_Mae_Proveedor eliminado';
END

-- FK_Tbt_PersonaRol_Mae_Persona
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Tbt_PersonaRol_Mae_Persona')
BEGIN
    ALTER TABLE [persona].[Tbt_PersonaRol] DROP CONSTRAINT FK_Tbt_PersonaRol_Mae_Persona;
    PRINT '  ✓ FK_Tbt_PersonaRol_Mae_Persona eliminado';
END

-- FK_Tbt_PersonaRol_Tip_Rol
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Tbt_PersonaRol_Tip_Rol')
BEGIN
    ALTER TABLE [persona].[Tbt_PersonaRol] DROP CONSTRAINT FK_Tbt_PersonaRol_Tip_Rol;
    PRINT '  ✓ FK_Tbt_PersonaRol_Tip_Rol eliminado';
END

-- FK_Tbt_PersonaCompaniaSeguro_Mae_Persona
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Tbt_PersonaCompaniaSeguro_Mae_Persona')
BEGIN
    ALTER TABLE [persona].[Tbt_PersonaCompaniaSeguro] DROP CONSTRAINT FK_Tbt_PersonaCompaniaSeguro_Mae_Persona;
    PRINT '  ✓ FK_Tbt_PersonaCompaniaSeguro_Mae_Persona eliminado';
END

-- FK_Tbt_PersonaCompaniaSeguro_Mae_CompaniaSeguros
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Tbt_PersonaCompaniaSeguro_Mae_CompaniaSeguros')
BEGIN
    ALTER TABLE [persona].[Tbt_PersonaCompaniaSeguro] DROP CONSTRAINT FK_Tbt_PersonaCompaniaSeguro_Mae_CompaniaSeguros;
    PRINT '  ✓ FK_Tbt_PersonaCompaniaSeguro_Mae_CompaniaSeguros eliminado';
END

-- FK_Mae_SucursalCompaniaSeguro_Mae_Sucursal
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_SucursalCompaniaSeguro_Mae_Sucursal')
BEGIN
    ALTER TABLE [persona].[Mae_SucursalCompaniaSeguro] DROP CONSTRAINT FK_Mae_SucursalCompaniaSeguro_Mae_Sucursal;
    PRINT '  ✓ FK_Mae_SucursalCompaniaSeguro_Mae_Sucursal eliminado';
END

-- FK_Mae_SucursalCompaniaSeguro_Mae_CompaniaSeguros
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_Mae_SucursalCompaniaSeguro_Mae_CompaniaSeguros')
BEGIN
    ALTER TABLE [persona].[Mae_SucursalCompaniaSeguro] DROP CONSTRAINT FK_Mae_SucursalCompaniaSeguro_Mae_CompaniaSeguros;
    PRINT '  ✓ FK_Mae_SucursalCompaniaSeguro_Mae_CompaniaSeguros eliminado';
END

-- =====================================================
-- VERIFICAR LOS FK CONSTRAINTS EXISTENTES ANTES DE ELIMINAR
-- =====================================================
PRINT 'Foreign Keys existentes antes de eliminar:';
SELECT 
    SCHEMA_NAME(f.schema_id) AS Esquema,
    OBJECT_NAME(f.parent_object_id) AS Tabla,
    f.name AS NombreConstraint,
    OBJECT_NAME(f.referenced_object_id) AS TablaReferenciada
FROM sys.foreign_keys f
WHERE SCHEMA_NAME(f.schema_id) IN ('persona', 'convenio')
ORDER BY Esquema, Tabla;
PRINT '---';

-- =====================================================
-- ELIMINAR FOREIGN KEYS EN ORDEN LÓGICO
-- =====================================================

-- =====================================================
-- VERIFICAR QUE NO QUEDEN FOREIGN KEY CONSTRAINTS
-- =====================================================
PRINT '====================================================';
PRINT 'VERIFICANDO FOREIGN KEY CONSTRAINTS RESTANTES...';
PRINT '====================================================';

-- Verificar Foreign Keys restantes
DECLARE @FK_Count INT;
SELECT @FK_Count = COUNT(*)
FROM sys.foreign_keys f
WHERE SCHEMA_NAME(f.schema_id) IN ('persona', 'convenio');

IF @FK_Count = 0
BEGIN
    PRINT '✅ PERFECTO: No hay Foreign Key constraints restantes';
END
ELSE
BEGIN
    PRINT '⚠️  ATENCIÓN: Aún quedan ' + CAST(@FK_Count AS VARCHAR) + ' Foreign Keys:';
    
    SELECT 
        SCHEMA_NAME(f.schema_id) AS Esquema,
        OBJECT_NAME(f.parent_object_id) AS Tabla,
        f.name AS NombreConstraint,
        OBJECT_NAME(f.referenced_object_id) AS TablaReferenciada
    FROM sys.foreign_keys f
    WHERE SCHEMA_NAME(f.schema_id) IN ('persona', 'convenio')
    ORDER BY Esquema, Tabla;
END

PRINT '====================================================';
PRINT 'ELIMINACIÓN DE FOREIGN KEY CONSTRAINTS COMPLETADA';
PRINT 'Los PRIMARY KEY constraints se mantienen intactos';
PRINT '====================================================';

-- CONFIRMAR TRANSACCIÓN
COMMIT TRANSACTION;

-- =====================================================
-- SCRIPT PARA RECREAR SOLO LOS FOREIGN KEY CONSTRAINTS (OPCIONAL)
-- Ejecutar solo si necesitas restaurar los Foreign Keys
-- =====================================================

/*
-- =====================================================
-- RECREAR FOREIGN KEY CONSTRAINTS
-- =====================================================
BEGIN TRANSACTION;

PRINT 'Recreando FOREIGN KEY constraints...';

ALTER TABLE [persona].[Mae_PersonaJuridica] 
ADD CONSTRAINT FK_Mae_PersonaJuridica_Mae_Persona 
FOREIGN KEY (IdPersona) REFERENCES [persona].[Mae_Persona](IdPersona);

ALTER TABLE [persona].[Mae_CompaniaSeguros] 
ADD CONSTRAINT FK_Mae_CompaniaSeguros_Mae_PersonaJuridica 
FOREIGN KEY (IdPersonaJuridica) REFERENCES [persona].[Mae_PersonaJuridica](IdPersona);

ALTER TABLE [persona].[Mae_Proveedor] 
ADD CONSTRAINT FK_Mae_Proveedor_Mae_Persona 
FOREIGN KEY (IdPersona) REFERENCES [persona].[Mae_Persona](IdPersona);

ALTER TABLE [persona].[Mae_Proveedor] 
ADD CONSTRAINT FK_Mae_Proveedor_Tip_TipoProveedor 
FOREIGN KEY (IdTipoProveedor) REFERENCES [persona].[Tip_TipoProveedor](IdTipoProveedor);

ALTER TABLE [persona].[Mae_Sucursal] 
ADD CONSTRAINT FK_Mae_Sucursal_Mae_Proveedor 
FOREIGN KEY (IdProveedor) REFERENCES [persona].[Mae_Proveedor](IdProveedor);

ALTER TABLE [persona].[Tbt_PersonaRol] 
ADD CONSTRAINT FK_Tbt_PersonaRol_Mae_Persona 
FOREIGN KEY (IdPersona) REFERENCES [persona].[Mae_Persona](IdPersona);

ALTER TABLE [persona].[Tbt_PersonaRol] 
ADD CONSTRAINT FK_Tbt_PersonaRol_Tip_Rol 
FOREIGN KEY (IdTipoRol) REFERENCES [persona].[Tip_Rol](IdTipoRol);

ALTER TABLE [persona].[Tbt_PersonaCompaniaSeguro] 
ADD CONSTRAINT FK_Tbt_PersonaCompaniaSeguro_Mae_Persona 
FOREIGN KEY (IdPersona) REFERENCES [persona].[Mae_Persona](IdPersona);

ALTER TABLE [persona].[Tbt_PersonaCompaniaSeguro] 
ADD CONSTRAINT FK_Tbt_PersonaCompaniaSeguro_Mae_CompaniaSeguros 
FOREIGN KEY (IdCompaniaSeguro) REFERENCES [persona].[Mae_CompaniaSeguros](IdCompaniaSeguros);

ALTER TABLE [persona].[Mae_SucursalCompaniaSeguro] 
ADD CONSTRAINT FK_Mae_SucursalCompaniaSeguro_Mae_Sucursal 
FOREIGN KEY (IdSucursal) REFERENCES [persona].[Mae_Sucursal](IdSucursal);

ALTER TABLE [persona].[Mae_SucursalCompaniaSeguro] 
ADD CONSTRAINT FK_Mae_SucursalCompaniaSeguro_Mae_CompaniaSeguros 
FOREIGN KEY (IdCompaniaSeguro) REFERENCES [persona].[Mae_CompaniaSeguros](IdCompaniaSeguros);

PRINT 'FOREIGN KEY CONSTRAINTS RECREADOS EXITOSAMENTE';
COMMIT TRANSACTION;
*/
